<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Imports and setup: Do not modify! -->
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets" />
  <Import Project="$(MSBuildExtensionsPath)\MSBuildDNNtcTasks\DNNtc.MSBuild.Tasks.targets" />
  

  <!--###########################################################################################################################-->

  <!--==========================================================================================================================-->
  <!-- 25-04-2010 Tim van Leeuwen
    
    When building your project in Debug Mode, nothing extra is being done. When building in Release Mode, the following steps are 
    undertaken:

    1. Before Build, Get the versionnumber
    
    2. After build, Create SOURCES.DNN File
    3. After build create the SOURCES package
    
    4. After build, Create INSTALL.DNN File 
    5. After build create the INSTALL package
    
    6. Copy the local Bin folder to the website 
        
  -->
  <!--==========================================================================================================================-->
  <!--Include in ProjectFile-->
  <!--<Import Project="$(MSBuildProjectDirectory)\Installation\Project.targets" />-->

  <!--Add to each Module UserControl-->
  <!--[DNNtc.ModuleControlProperties()]   for C#-->
  <!--<DNNtc.ModuleControlProperties()> _  fot VB-->
  <!--==========================================================================================================================-->
  
  <!--Company properties-->
    <PropertyGroup>
        <CompanyName>DotNetNuke Corporation</CompanyName>
        <CompanyUrl>http://www.dotnetnuke.com</CompanyUrl>
        <CompanyEmail>support@dotnetnuke.com</CompanyEmail>
    </PropertyGroup>

    <!--You may change these properties when needed-->
    <PropertyGroup>
        <!--Fill in the folder where the output will be build to-->
        <BinDir>$(MSBuildProjectDirectory)\Bin</BinDir>
        <!--Module properties.-->
        <ModuleName>DNN_FAQs</ModuleName>
        <FolderName>FAQs</FolderName>
        <FriendlyName>FAQs</FriendlyName>
        <ModuleDescription>FAQs allow you to manage a list of Frequently Asked Questions and their corresponding Answers.</ModuleDescription>
    </PropertyGroup>

    <!--###########################################################################################################################-->

  <!--Do not change these settings-->
  <PropertyGroup>
    <!--<AssemblyInfoFile>$(MSBuildProjectDirectory)\AssemblyInfo.vb</AssemblyInfoFile>-->
    <InstallDir>$(MSBuildProjectDirectory)\Installation</InstallDir>
    <dnnFile>$(InstallDir)\$(ModuleName).dnn5</dnnFile>
  </PropertyGroup>

  <!--For start Versioning: Do not modify EVER!!! -->
  <PropertyGroup>
    <Major>1</Major>
    <Minor>0</Minor>
    <Build>0</Build>
    <FileMajor>0</FileMajor>
    <FileMinor>0</FileMinor>
    <FileBuild>0</FileBuild>
  </PropertyGroup>

  <!--Assembly file for version information: Do not modify-->
  <ItemGroup>
    <AssemblyInfoFiles Include=".\**\AssemblyInfo.*"/>
  </ItemGroup>

  <!--###########################################################################################################################-->
      
  <!--MAIN Actions -->
  <Target Name="BeforeBuild">
    <!--Determine the version info-->
    <CallTarget Targets="SetVersionInfo" />    
  </Target>
  <Target Name="AfterBuild">
    <!--When the buildtype = release the package is created -->
    <CallTarget Targets="Release" />
    <CallTarget Targets="CopyDeployFiles" />
  </Target>

  <!--###########################################################################################################################-->

  <!-- Set Version Number -->
  <Target Name="SetVersionInfo" Condition="'$(ConfigurationName)'=='Release'">
    
     <!--Get the Assemblyfile-->
    <ReadLinesFromFile
      File="%(AssemblyInfoFiles.FullPath)" >
      <Output
        TaskParameter="Lines"
        ItemName="ItemsFromFile"/>
    </ReadLinesFromFile>

    <!--Update the properties with the updated Fileversion-->
    <GetVersionInfo Version="%(ItemsFromFile.Identity)">
      <Output TaskParameter="Major" PropertyName="Major" />
      <Output TaskParameter="Minor" PropertyName="Minor" />
      <Output TaskParameter="Build" PropertyName="Build" />
    </GetVersionInfo>
    
    <!-- DNN == single digits to be prefixed with a zero -->
      <CreateProperty Value="$(Major)" >
          <Output TaskParameter="Value" PropertyName="FileMajor" />
      </CreateProperty>
      <CreateProperty Value="$(Minor)" >
          <Output TaskParameter="Value" PropertyName="FileMinor" />
      </CreateProperty>
      <CreateProperty Value="0$(Build)" >
          <Output TaskParameter="Value" PropertyName="FileBuild" />
      </CreateProperty>
      <CreateProperty Value="0$(Major)" Condition="$(Major) &lt;= 9" >
      <Output TaskParameter="Value" PropertyName="FileMajor" />
    </CreateProperty>
      <CreateProperty Value="0$(Minor)"  Condition="$(Minor) &lt;= 9">
          <Output TaskParameter="Value" PropertyName="FileMinor" />
      </CreateProperty>
    <CreateProperty Value="0$(Build)" Condition="$(Build) &lt;= 9" >
      <Output TaskParameter="Value" PropertyName="FileBuild" />
    </CreateProperty>

  </Target>
  
  <!-- Release -->
  <Target Name="Release" Condition="'$(ConfigurationName)'=='Release'" >
    <CallTarget Targets="RemoveZips" />
    <CallTarget Targets="CreateDnnFile" />
    <CallTarget Targets="RePlaceTabs" />
    <CallTarget Targets="ZipInstall" />
    <CallTarget Targets="ZipSource" />
  </Target>

  <!-- Remove previous files -->
  <Target Name="RemoveZips">
    <CreateItem Include="$(InstallDir)\*.zip;">
      <Output TaskParameter="Include" ItemName="deleteFiles" />
    </CreateItem>
    <Delete ContinueOnError="true" Files="@(deleteFiles)"></Delete>
  </Target>

  <!--Create DNN file-->
  <Target Name="CreateDnnFile">
      
    <!--Write the empty dnn file-->
    <!--<WriteLinesToFile File="$(MSBuildProjectDirectory)\Installation\$(ModuleName).dnn5" Lines="@(dnnLines)" Overwrite="true"></WriteLinesToFile>-->
    <CreateFile Target="$(dnnFile)" />

    <!--Create the reference to the dnn file to replace text in it-->
    <CreateItem Include="$(dnnFile)" >
      <Output TaskParameter="Include" ItemName="ModulednnFile"/>
    </CreateItem>
   
    <!--replace Modulename-->
    <FileUpdate Files="@(ModulednnFile)" Regex="@ModuleName@" ReplacementText="$(ModuleName)" />
    
    <!--Replace Module description-->
    <FileUpdate Files="@(ModulednnFile)" Regex="@Description@" ReplacementText="$(ModuleDescription)" />
    
    <!--Replace Foldername-->
    <FileUpdate Files="@(ModulednnFile)" Regex="@FolderName@" ReplacementText="$(FolderName)" />

    <!--Replace Foldername-->
    <FileUpdate Files="@(ModulednnFile)" Regex="@FriendlyName@" ReplacementText="$(FriendlyName)" />
    
    <!--replace company information-->
    <FileUpdate Files="@(ModulednnFile)" Regex="@CompanyName@" ReplacementText="$(CompanyName)" />
    <FileUpdate Files="@(ModulednnFile)" Regex="@CompanyUrl@" ReplacementText="$(CompanyUrl)" />
    <FileUpdate Files="@(ModulednnFile)" Regex="@CompanyEmail@" ReplacementText="$(CompanyEmail)" />
    
    <!--Update the Versionnumber-->
    <FileUpdate Files="@(ModulednnFile)" Regex="@version@" ReplacementText="$(Major).$(Minor).$(Build)" />

    <!--License and Release Component-->
    <CreateItem Include="$(InstallDir)\License.*; 
                $(InstallDir)\ReleaseNotes\$(FileMajor).$(FileMinor).$(FileBuild).*; ">
      <Output TaskParameter="Include" ItemName="LicenseRelease" />
    </CreateItem>            
    <LicenseReleaseComponent Files="@(LicenseRelease)">
      <Output TaskParameter="LicenseString" PropertyName="LicenseString" />
      <Output TaskParameter="ReleaseString" PropertyName="ReleaseString" />
    </LicenseReleaseComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@Licensetxt@" ReplacementText="$(LicenseString)" />
    <FileUpdate Files="@(ModulednnFile)" Regex="@Releasetxt@" ReplacementText="$(ReleaseString)" />
    
    <!--Replace the Dependencies component-->
    <CreateItem Include="$(MSBuildProjectDirectory)\**\*.ascx.vb;
                $(MSBuildProjectDirectory)\**\*.ascx.cs;">
      <Output TaskParameter="Include" ItemName="Dependencies" />
    </CreateItem>
    <DependenciesComponent Files="@(Dependencies)" >
      <Output TaskParameter="ResultString" PropertyName="Dependencies" />
    </DependenciesComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@Dependencies@" ReplacementText="$(Dependencies)" />
    
    <!--Update the Script (sqldataprovider) files-->
    <CreateItem Include="$(InstallDir)\*.sqldataprovider">
      <Output TaskParameter="Include" ItemName="scriptFiles" />
    </CreateItem>
    <ScriptComponent Path="Installation" Files="@(scriptFiles)" >
      <Output TaskParameter="ResultString" PropertyName="ScriptComponent" />
    </ScriptComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@ScriptComponent@" ReplacementText="$(ScriptComponent)" />

    <!--Replace the Businesscontroller Class part AND the Supported Features part AND the eventMessage-->
    <CreateItem Include="$(MSBuildProjectDirectory)\**\*.vb;$(MSBuildProjectDirectory)\**\*.cs;">
      <Output TaskParameter="Include" ItemName="BusinessController" />
    </CreateItem>
    <BusinessControllerComponent Files="@(BusinessController)" >
      <Output TaskParameter="ResultString" PropertyName="BusinessController" />
      <Output TaskParameter="SupportedFeatures" PropertyName="SupportedFeatures" />
      <Output TaskParameter="EventMessage" PropertyName="EventMessage" />
    </BusinessControllerComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@BusinessControllerClass@" ReplacementText="$(BusinessController)" />
    <FileUpdate Files="@(ModulednnFile)" Regex="@SupportedFeatures@" ReplacementText="$(SupportedFeatures)" />
    <FileUpdate Files="@(ModulednnFile)" Regex="@EventMessage@" ReplacementText="$(EventMessage)" />
        
    <!--Replace the Permissions part-->
    <CreateItem Include="$(MSBuildProjectDirectory)\**\*.vb;
                $(MSBuildProjectDirectory)\**\*.cs;">
      <Output TaskParameter="Include" ItemName="permissions" />
    </CreateItem>
    <ModulePermissionComponent Files="@(permissions)" >
      <Output TaskParameter="ResultString" PropertyName="Permissions" />
    </ModulePermissionComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@Permissions@" ReplacementText="$(Permissions)" />
    
    <!--Get the controls-->
    <CreateItem Include="$(MSBuildProjectDirectory)\**\*.ascx.vb;
                $(MSBuildProjectDirectory)\**\*.ascx.cs;">
      <Output TaskParameter="Include" ItemName="UserControls" />
    </CreateItem>
    <ModuleControlsComponent ModuleName="$(FolderName)" Files="@(UserControls)" >
      <Output TaskParameter="ResultString" PropertyName="moduleControls" />
    </ModuleControlsComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@moduleControls@" ReplacementText="$(moduleControls)" />
    
    <!--Update the Module (assembly) files-->
    <CreateItem Include="$(BinDir)\*.dll">
      <Output TaskParameter="Include" ItemName="assemblyFiles" />
    </CreateItem>
    <AssemblyComponent Path="bin" Files="@(assemblyFiles)" >
      <Output TaskParameter="ResultString" PropertyName="assemblyComponent" />
    </AssemblyComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@assemblyComponent@" ReplacementText="$(assemblyComponent)" />
    
    <!--Update the CleanupComponent section-->
    <CreateItem Include="$(MSBuildProjectDirectory)\Installation\CleanUp\*.txt">
      <Output TaskParameter="Include" ItemName="CleanUpFiles" />
    </CreateItem>
    <CleanUpComponent Files="@(CleanUpFiles)" >
      <Output TaskParameter="ResultString" PropertyName="cleanUpComponent" />
    </CleanUpComponent>
    <FileUpdate Files="@(ModulednnFile)" Regex="@CleanupFiles@" ReplacementText="$(cleanUpComponent)" />

  </Target>

  <!--Replace the @tab@ string with a tab-->
  <Target Name="RePlaceTabs">

    <CreateItem Include="$(dnnFile)" >
      <Output TaskParameter="Include" ItemName="ModulednnFile"/>
    </CreateItem>

    <!--replace tabs-->
    <FileUpdate Files="@(ModulednnFile)" Regex="@tab@" ReplacementText="  " />

  </Target>

  <!-- Install zip file -->
  <Target Name="ZipInstall">
    <RemoveDir ContinueOnError="true" Directories="$(InstallDir)\tmp" />
    <MakeDir Directories="$(InstallDir)\tmp" />
    <!-- Get files -->
    <CreateItem
          Exclude="**\.svn\**;
						$(MSBuildProjectDirectory)\obj\**;
						$(MSBuildProjectDirectory)\bin\**;
						$(MSBuildProjectDirectory)\My Project\*.*;
						$(MSBuildProjectDirectory)\Properties\*.*;
						$(MSBuildProjectDirectory)\Dependencies\*.*; 
						$(MSBuildProjectDirectory)\Installation\**;
            $(MSBuildProjectDirectory)\Controls\**;  
            $(MSBuildProjectDirectory)\*ReSharper*\**;"
          Include="$(MSBuildProjectDirectory)\**\*.ascx;
						$(MSBuildProjectDirectory)\**\*.aspx;
						$(MSBuildProjectDirectory)\**\*.css;
						$(MSBuildProjectDirectory)\**\*.xml;
						$(MSBuildProjectDirectory)\**\*.xslt;
						$(MSBuildProjectDirectory)\**\*.js;
					  $(MSBuildProjectDirectory)\**\*.resx;
						$(MSBuildProjectDirectory)\**\*.rpt;
						$(MSBuildProjectDirectory)\**\*.gif;
						$(MSBuildProjectDirectory)\**\*.jpg;
						$(MSBuildProjectDirectory)\**\*.png;"
					>
      <Output TaskParameter="Include" ItemName="resources" />
    </CreateItem>
    <CreateItem Include="$(InstallDir)\resources.zip;
					$(dnnFile);" >
      <Output TaskParameter="Include" ItemName="install"/>
    </CreateItem>
    <CreateItem Include="$(InstallDir)\*.SqlDataProvider;" >
      <Output TaskParameter="Include" ItemName="sql"/>
    </CreateItem>
    <CreateItem Include="$(BinDir)\*.dll;" >
      <Output TaskParameter="Include" ItemName="dll"/>
    </CreateItem>
    
    <!-- Create resources.zip -->
    <Zip Files="@(resources)"
         WorkingDirectory="$(MSBuildProjectDirectory)"
         ZipFileName="$(InstallDir)\resources.zip" />

    <!-- Copy installation files to tmp and creates installation zip -->
    <Copy ContinueOnError="true" SourceFiles="@(install)" DestinationFolder="$(InstallDir)\tmp"></Copy>
    <Copy ContinueOnError="true" SourceFiles="@(sql)" DestinationFolder="$(InstallDir)\tmp\Installation"></Copy>
    <Copy ContinueOnError="true" SourceFiles="@(dll)" DestinationFolder="$(InstallDir)\tmp\bin"></Copy>
    
    <CreateItem Include="$(InstallDir)\tmp\**\*.*">
      <Output TaskParameter="Include" ItemName="ZipInstallFiles" />
    </CreateItem>
    <Zip Files="@(ZipInstallFiles)" WorkingDirectory="$(InstallDir)\tmp"
         ZipFileName="$(InstallDir)\$(ModuleName)_$(FileMajor).$(FileMinor).$(FileBuild)_Install.zip" />

    <!-- Cleanup -->
    <RemoveDir ContinueOnError="true" Directories="$(InstallDir)\tmp" />
    <Delete Files="$(InstallDir)\resources.zip"></Delete>
  </Target>

  <!-- Source code zip file -->
  <Target Name="ZipSource">
    <!-- zip source code -->
    <RemoveDir ContinueOnError="true" Directories="$(InstallDir)\tmpsrc" />
    <MakeDir Directories="$(InstallDir)\tmpsrc" />
    
    <!--change dnn file-->
    <CreateItem Include="$(dnnFile)" >
      <Output TaskParameter="Include" ItemName="srcModulednnFile"/>
    </CreateItem>

    <!--replace Modulename-->
    <FileUpdate Files="@(srcModulednnFile)" Regex="resources.zip" ReplacementText="sources.zip" />
    
    <!-- Get files -->
    <CreateItem
          Exclude="**\.svn\**;
            $(MSBuildProjectDirectory)\**\*.vspscc;
            $(MSBuildProjectDirectory)\**\*.vssscc;
            $(MSBuildProjectDirectory)\**\*.suo;
            $(MSBuildProjectDirectory)\**\*.user;
            $(MSBuildProjectDirectory)\**\*.zip;
            $(MSBuildProjectDirectory)\_ReSharper.*\**;
						$(MSBuildProjectDirectory)\obj\**;
						$(MSBuildProjectDirectory)\bin\**"
          Include="$(MSBuildProjectDirectory)\**\*.*" >
      <Output TaskParameter="Include" ItemName="srcsources" />
    </CreateItem>
    <CreateItem Include="$(InstallDir)\sources.zip;
					$(dnnFile);" >
      <Output TaskParameter="Include" ItemName="srcinstall"/>
    </CreateItem>
    <CreateItem Include="$(InstallDir)\*.SqlDataProvider;" >
      <Output TaskParameter="Include" ItemName="srcsql"/>
    </CreateItem>
    <CreateItem Include="$(BinDir)\*.dll;" >
      <Output TaskParameter="Include" ItemName="srcdll"/>
    </CreateItem>

    <!-- Create sources.zip -->
    <Zip Files="@(srcsources)"
         WorkingDirectory="$(MSBuildProjectDirectory)"
         ZipFileName="$(InstallDir)\sources.zip" />

    <!-- Copy installation files to tmp and creates installation zip -->
    <Copy ContinueOnError="true" SourceFiles="@(srcinstall)" DestinationFolder="$(InstallDir)\tmpsrc"></Copy>
    <Copy ContinueOnError="true" SourceFiles="@(srcsql)" DestinationFolder="$(InstallDir)\tmpsrc\Installation"></Copy>
    <Copy ContinueOnError="true" SourceFiles="@(srcdll)" DestinationFolder="$(InstallDir)\tmpsrc\bin"></Copy>

    <CreateItem
      Exclude="$(InstallDir)\**\resources.zip;" 
      Include="$(InstallDir)\tmpsrc\**\*.*">
      <Output TaskParameter="Include" ItemName="srcZipInstallFiles" />
    </CreateItem>
    <Zip Files="@(srcZipInstallFiles)" WorkingDirectory="$(InstallDir)\tmpsrc"
         ZipFileName="$(InstallDir)\$(ModuleName)_$(FileMajor).$(FileMinor).$(FileBuild)_Source.zip" />

    <!-- Cleanup -->
    <FileUpdate Files="@(srcModulednnFile)" Regex="sources.zip" ReplacementText="resources.zip" />
    <RemoveDir ContinueOnError="true" Directories="$(InstallDir)\tmpsrc" />
    <Delete Files="$(InstallDir)\sources.zip"></Delete>
  </Target>
  
  <!-- Copy files to dev folder -->
  <Target Name="CopyDeployFiles">
     <!--Get the .dll .pdb files--> 
    <CreateItem Include=" $(BinDir)\*.pdb;$(BinDir)\*.dll">
      <Output TaskParameter="Include" ItemName="BinFiles" />
    </CreateItem>
    
    <!--Copy the files-->
    <Copy SourceFiles="@(BinFiles)" DestinationFolder="..\..\bin\" SkipUnchangedFiles="true" ContinueOnError="false" />
  </Target>

</Project>